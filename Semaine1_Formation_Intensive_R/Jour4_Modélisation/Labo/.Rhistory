library(tidyverse)
poids <- c(57, 84, 90, 71, 77, 68, 73)
poids
longueur <- c(123, 129, 143, 125, 122, 125, 122)
longueur
louve <- data_frame(poids, longueur)
louve
View(louve)
ggplot(louve) +
geom_point(aes(x = longueur, y = poids))
ggplot(louve) +
geom_point(aes(x = longueur, y = poids)) +
geom_smooth(aes(x = longueur, y = poids), method = "lm", se = FALSE, size = .5)
louve <-
louve %>%
mutate(dec_longueur = longueur - mean(longueur),
dec_longueur_sq = dec_longueur ^ 2,
dec_poids = poids - mean(poids),
prod_croise = dec_poids*dec_longueur)
louve
View(louve)
coef_reg <-
louve %>%
summarise(beta = sum(prod_croise)/sum(dec_longueur_sq),
alpha = mean(poids) - beta*mean(longueur))
coef_reg
ggplot(louve) +
geom_point(aes(x = longeur, y = poids))
ggplot(louve) +
geom_point(aes(x = longueur, y = poids))
coef_reg[1]
coef_reg[2]
ggplot(louve) +
geom_point(aes(x = longueur, y = poids)) +
geom_abline(aes(intercept = coef_reg[2], slope = coef_reg[1]))
coef_reg[[1]]
ggplot(louve) +
geom_point(aes(x = longueur, y = poids)) +
geom_abline(aes(intercept = coef_reg[[2]], slope = coef_reg[[1]]))
coef_reg[1]
class(coef_reg[1])
class(coef_reg[[1]])
ggplot(louve) +
geom_point(aes(x = longueur, y = poids)) +
geom_abline(aes(intercept = coef_reg[[2]], slope = coef_reg[[1]]))
ggplot(louve) +
geom_point(aes(x = longueur, y = poids)) +
geom_abline(aes(intercept = coef_reg[[2]], slope = coef_reg[[1]]), color = "red")
coef_reg
ggplot(louve) +
geom_point(aes(x = longueur, y = poids)) +
geom_abline(data = coef_reg, aes(intercept = coef_reg$alpha, slope = coef_reg$beta), color = "red")
ggplot(louve) +
geom_point(aes(x = longueur, y = poids)) +
geom_abline(aes(intercept = coef_reg[[2]], slope = coef_reg[[1]]), color = "red") +
geom_smooth(aes(x = longueur, y = poids), method = "lm"))
ggplot(louve) +
geom_point(aes(x = longueur, y = poids)) +
geom_abline(aes(intercept = coef_reg[[2]], slope = coef_reg[[1]]), color = "red") +
geom_smooth(aes(x = longueur, y = poids), method = "lm")
ggplot(louve) +
geom_point(aes(x = longueur, y = poids)) +
geom_abline(aes(intercept = coef_reg[[2]], slope = coef_reg[[1]]), color = "red") +
geom_smooth(aes(x = longueur, y = poids), method = "lm", se = FALSE)
coef_reg
a <- coef_reg[2]
a
b <- coef_reg[1]
b
louve <-
louve %>%
mutate(poids_pred = a + b	*longueur)
View(louve)
a
a <- coef_reg[[2]]
a
b <- coef_reg[[1]]
b
louve <-
louve %>%
mutate(poids_pred = a + b	*longueur)
View(louve)
louve <-
louve %>%
mutate( residu = poids - poids_pred)
louve
View(louve)
reg1 <- lm(formula =  poids ~ longueur, data = louve)
reg <-
louve %>%
lm(formula =  poids ~ longueur)
reg1
View(reg1)
summary(reg1)
summary(reg1)[1]
summary(reg1)[2]
summary(reg1)
#install.packages("broom")
library(broom)
?broom
tidy(reg1)
tableau_reg <- tidy(reg1)
tableau_reg
tableau_reg$estimate
tableau_reg
glance(reg1)
results <- augment(reg1)
results
louve <-
louve %>%
mutate(longueur1 = longueur - 122)
reg2 <- lm(formula =  poids ~ longueur1 , data = louve)
reg2
reg2
rm(list = ls())
library(tidyverse)
library(summarytools)
library(broom)
dhs_ipv <- read_csv("../dhs_ipv.csv")
dhs_ipv <- read_csv("../Données/dhs_ipv.csv")
summary(dhs_ipv)
class(dhs_ipv$beat_burnfood)
lm(beat_burnfood ~ sec_school, data = dhs_ipv)
reg1 <- lm(beat_burnfood ~ sec_school, data = dhs_ipv)
reg1
coef(reg1)
summary(reg1)
reg2 <- lm(beat_burnfood ~  no_media, data = dhs_ipv)
summary(reg2)
class(dhs_ipv$region)
freq(dhs_ipv$region)
reg3 <- lm(beat_burnfood ~  region, data = dhs_ipv)
reg3
summary(reg3)
dhs_ipv <-
dhs_ipv %>%
mutate(year_binaire = factor(if_else(year <= 2010, "Avant 2010", "Apres 2010")))
freq(dhs_ipv$year_binaire)
reg4 <- lm(beat_burnfood ~  year_binaire, data = dhs_ipv)
summary(reg4)
freq(dhs_ipv$year_binaire)
reg5 <- lm(beat_burnfood ~ relevel(year_binaire, ref = "Avant 2010"), data = dhs_ipv)
coef(reg5)
dhs_ipv <-
dhs_ipv %>%
mutate(year_binaire1 = factor(if_else(year <= 2010, "Avant 2010", "Apres 2010"), levels = c("Avant 2010", "Apres 2010")))
freq(dhs_ipv$year_binaire1)
reg6 <- lm(beat_burnfood ~  year_binaire1, data = dhs_ipv)
summary(reg6)
reg_mul1 <- lm(beat_burnfood ~ sec_school + no_media, data = dhs_ipv)
reg_mul1
summary(reg_mul1)
cor(dhs_ipv$sec_school, dhs_ipv$no_media, use = "pairwise.complete.obs")
summary(reg_mul1)
reg_mul2 <- lm(beat_burnfood ~ sec_school + no_media + region + year_binaire, data = dhs_ipv)
summary(reg_mul2)
library(stargazer)
stargazer(reg1, reg2, reg_mul1, reg_mul2, title = "Divers modèles", align = TRUE, type = "text")
stargazer(reg1, reg2, reg_mul1, reg_mul2, title = "Divers modèles", align = TRUE, type = "latex")
stargazer(reg1, reg2, reg_mul1, reg_mul2, title = "Divers modèles", align = TRUE, type = "text")
